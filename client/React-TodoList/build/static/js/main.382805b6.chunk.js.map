{"version":3,"sources":["Overmind/auth/actions.ts","Overmind/auth/effects.ts","Overmind/auth/index.ts","Overmind/auth/state.ts","Overmind/darkMode/state.ts","Overmind/darkMode/actions.ts","Overmind/darkMode/index.ts","Overmind/todos/actions.ts","Overmind/todos/effects.ts","Overmind/todos/index.ts","Overmind/todos/state.ts","Overmind/index.ts","Layout/Sidebar.tsx","Layout/Navbar.tsx","Pages/Login.tsx","Components/NewTodo.tsx","Components/Todo.tsx","Pages/Todos.tsx","Pages/CreateUser.tsx","Layout/Error.tsx","App.tsx","index.tsx"],"names":["login","cred","a","state","effects","auth","api","error","clearError","getMe","createUser","user","logout","data","Promise","resolve","setTimeout","isAuthenticated","fetch","method","headers","credentials","body","JSON","stringify","req","json","res","success","message","console","log","actions","prefersDarkMode","window","matchMedia","matches","document","documentElement","classList","add","turnOn","darkMode","isEnabled","turnOff","remove","getTodos","todos","sortTodos","updateTodo","obj","id","updatedTodo","index","findIndex","val","_id","deleteTodo","splice","newTodo","newState","done","filter","todo","notDone","sort","b","createdAt","config","namespaced","useOvermind","createHook","Sidebar","props","isOpen","setIsOpen","history","useHistory","className","onClick","push","Navbar","useState","isDesktop","useMediaQuery","query","desktopNav","mobile","Login","email","password","credencials","setCredencials","useEffect","type","placeholder","name","onChange","e","target","value","NewTodo","newTodoData","title","description","TodoComp","date","Date","Intl","DateTimeFormat","month","day","formatToParts","changeIsDone","checked","Todos","allTodos","map","Todo","key","CreateUser","newUser","setNewUser","Error","App","overmind","createOvermind","devtools","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.382805b6.chunk.js","sourcesContent":["import { AsyncAction } from \"overmind\";\r\n\r\nexport const login: AsyncAction<object, void> = async (\r\n  { state, effects },\r\n  cred\r\n) => {\r\n  state.auth = await effects.auth.api.login(cred);\r\n\r\n  if (state.auth.error) state.auth.error = (await clearError()) as null;\r\n};\r\n\r\nexport const getMe: AsyncAction = async ({ state, effects }) => {\r\n  state.auth = await effects.auth.api.getMe();\r\n\r\n  if (state.auth.error) state.auth.error = (await clearError()) as null;\r\n};\r\n\r\nexport const createUser: AsyncAction<object> = async (\r\n  { state, effects },\r\n  user\r\n) => {\r\n  state.auth = await effects.auth.api.createUser(user);\r\n\r\n  if (state.auth.error) state.auth.error = (await clearError()) as null;\r\n};\r\n\r\nexport const logout: AsyncAction = async ({ state, effects }) => {\r\n  const data = await effects.auth.api.logout();\r\n\r\n  if (data.error != null) {\r\n    state.auth.error = data.error;\r\n    state.auth.error = (await clearError()) as null;\r\n  } else {\r\n    state.auth = data;\r\n  }\r\n};\r\n\r\nconst clearError = () => {\r\n  return new Promise<null>((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(null);\r\n    }, 2000);\r\n  });\r\n};\r\n","import type { AuthState } from \"./state\";\r\n\r\nexport const api = {\r\n  async login(cred: object) {\r\n    let data: AuthState = {\r\n      isAuthenticated: false,\r\n      user: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(cred),\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        data.isAuthenticated = true;\r\n        data.user = res.message;\r\n      } else if (res.error) {\r\n        data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      } else {\r\n        data.error = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      return data;\r\n    }\r\n  },\r\n  async getMe() {\r\n    let data: AuthState = {\r\n      isAuthenticated: false,\r\n      user: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/auth/getMe`, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        data.isAuthenticated = true;\r\n        data.user = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return data;\r\n    }\r\n  },\r\n  async createUser(body: object) {\r\n    let data: AuthState = {\r\n      isAuthenticated: false,\r\n      user: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/auth/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        data.isAuthenticated = true;\r\n        data.user = res.message;\r\n      } else if (res.error) {\r\n        data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      } else {\r\n        data.error = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      return data;\r\n    }\r\n  },\r\n  async logout() {\r\n    let data: AuthState = {\r\n      isAuthenticated: false,\r\n      user: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/auth/logout`, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.error) {\r\n        data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      } else if (!res.success) {\r\n        data.error = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      return data;\r\n    }\r\n  },\r\n};\r\n","import { IConfig } from \"overmind\";\r\nimport { state } from \"./state\";\r\nimport * as actions from \"./actions\";\r\nimport * as effects from \"./effects\";\r\n\r\nexport const auth = {\r\n  state,\r\n  actions,\r\n  effects,\r\n};\r\n\r\ndeclare module \"overmind\" {\r\n  interface Config extends IConfig<typeof auth> {}\r\n}\r\n","export type User = {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n};\r\n\r\nexport type AuthState = {\r\n  isAuthenticated: boolean;\r\n  error: string | null;\r\n  user: User | null;\r\n};\r\n\r\nexport const state: AuthState = {\r\n  isAuthenticated: false,\r\n  error: null,\r\n  user: null,\r\n};\r\n","type DarkModeState = {\r\n  isEnabled: boolean;\r\n};\r\n\r\nconst prefersDarkMode: boolean = window.matchMedia(\r\n  \"(prefers-color-scheme: dark)\"\r\n).matches;\r\n\r\nif (prefersDarkMode) {\r\n  document.documentElement.classList.add(\"mode-dark\");\r\n}\r\n\r\nexport const state: DarkModeState = {\r\n  isEnabled: prefersDarkMode,\r\n};\r\n","import { Action } from \"overmind\";\r\n\r\nexport const turnOn: Action = ({ state }) => {\r\n  document.documentElement.classList.add(\"mode-dark\");\r\n\r\n  state.darkMode.isEnabled = true;\r\n};\r\n\r\nexport const turnOff: Action = ({ state }) => {\r\n  document.documentElement.classList.remove(\"mode-dark\");\r\n\r\n  state.darkMode.isEnabled = false;\r\n};\r\n","import { IConfig } from \"overmind\";\r\nimport { state } from \"./state\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport const darkMode = {\r\n  state,\r\n  actions,\r\n};\r\n\r\ndeclare module \"overmind\" {\r\n  interface Config extends IConfig<typeof darkMode> {}\r\n}\r\n","import { AsyncAction } from \"overmind\";\r\nimport { Todo } from \"./state\";\r\n\r\nexport const getTodos: AsyncAction = async ({ state, effects }) => {\r\n  let todos = await effects.todos.api.getTodos();\r\n\r\n  todos.todos = effects.todos.api.sortTodos(todos.todos);\r\n\r\n  state.todos = todos;\r\n\r\n  if (state.todos.error) state.todos.error = await clearError();\r\n};\r\n\r\nexport type UpdateTodoArg = {\r\n  body: object;\r\n  id: string;\r\n};\r\n\r\nexport const updateTodo: AsyncAction<UpdateTodoArg> = async (\r\n  { state, effects },\r\n  obj\r\n) => {\r\n  const updatedTodo = await effects.todos.api.updateTodo(obj.body, obj.id);\r\n\r\n  const index = state.todos.todos.findIndex((val) => val._id === obj.id);\r\n\r\n  if (updatedTodo.error) {\r\n    state.todos.error = updatedTodo.error;\r\n    state.todos.error = (await clearError()) as null;\r\n  } else {\r\n    state.todos.todos[index] = updatedTodo.updatedTodo as Todo;\r\n\r\n    state.todos.todos = effects.todos.api.sortTodos(state.todos.todos);\r\n  }\r\n};\r\n\r\nexport const deleteTodo: AsyncAction<string> = async (\r\n  { state, effects },\r\n  id\r\n) => {\r\n  const deleteTodo = await effects.todos.api.deleteTodo(id);\r\n\r\n  const index = state.todos.todos.findIndex((val) => val._id === id);\r\n\r\n  if (deleteTodo.success) {\r\n    state.todos.todos.splice(index, 1);\r\n  } else {\r\n    state.todos.error = deleteTodo.error;\r\n    state.todos.error = (await clearError()) as null;\r\n  }\r\n};\r\n\r\nexport const newTodo: AsyncAction<object> = async (\r\n  { state, effects },\r\n  newTodo\r\n) => {\r\n  const data = await effects.todos.api.newTodo(newTodo);\r\n\r\n  if (data.error) {\r\n    state.todos.error = data.error;\r\n    state.todos.error = (await clearError()) as null;\r\n  } else if (data.newTodo) {\r\n    let newState = [data.newTodo, ...state.todos.todos];\r\n\r\n    state.todos.todos = newState;\r\n  }\r\n};\r\n\r\nconst clearError = () => {\r\n  return new Promise<null>((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(null);\r\n    }, 2000);\r\n  });\r\n};\r\n","import { TodosState, Todo } from \"./state\";\r\n\r\nexport const api = {\r\n  async getTodos() {\r\n    let data: TodosState = {\r\n      error: null,\r\n      todos: [],\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/todos`, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        data.todos = res.message;\r\n      } else if (res.error) {\r\n        data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      } else {\r\n        data.error = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      return data;\r\n    }\r\n  },\r\n  async newTodo(body: object) {\r\n    interface Data {\r\n      error: null | string;\r\n      newTodo: Todo | null;\r\n    }\r\n\r\n    let data: Data = {\r\n      error: null,\r\n      newTodo: null,\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/todos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        data.newTodo = res.message;\r\n      } else if (res.error) {\r\n        data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      } else {\r\n        data.error = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      return data;\r\n    }\r\n  },\r\n  async updateTodo(body: object, id: string) {\r\n    interface Data {\r\n      error: null | string;\r\n      updatedTodo: Todo | null;\r\n    }\r\n    let data: Data = {\r\n      error: null,\r\n      updatedTodo: null,\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/todos/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        data.updatedTodo = res.message as Todo;\r\n      } else if (res.error) {\r\n        data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      } else {\r\n        data.error = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      return data;\r\n    }\r\n  },\r\n  async deleteTodo(id: string) {\r\n    interface Data {\r\n      error: null | string;\r\n      success: boolean;\r\n    }\r\n\r\n    let data: Data = {\r\n      error: null,\r\n      success: false,\r\n    };\r\n    try {\r\n      const req = await fetch(`/api/v1/todos/${id}`, {\r\n        method: \"DELETE\",\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        data.success = res.success;\r\n      } else if (res.error) {\r\n        data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      } else {\r\n        data.error = res.message;\r\n      }\r\n      return data;\r\n    } catch (err) {\r\n      console.log(err);\r\n      data.error = \"Something went wrong (╯°□°）╯︵ ┻━┻)\";\r\n      return data;\r\n    }\r\n  },\r\n  sortTodos(todos: Todo[]) {\r\n    let done = todos.filter((todo: Todo) => todo.done);\r\n    let notDone = todos.filter((todo: Todo) => !todo.done);\r\n\r\n    done.sort((a, b) => b.createdAt - a.createdAt);\r\n    notDone.sort((a, b) => b.createdAt - a.createdAt);\r\n\r\n    return [...notDone, ...done];\r\n  },\r\n};\r\n","import { IConfig } from \"overmind\";\r\nimport { state } from \"./state\";\r\nimport * as actions from \"./actions\";\r\nimport * as effects from \"./effects\";\r\n\r\nexport const todos = {\r\n  state,\r\n  actions,\r\n  effects,\r\n};\r\n\r\ndeclare module \"overmind\" {\r\n  interface Config extends IConfig<typeof todos> {}\r\n}\r\n","export type Todo = {\r\n  _id: string;\r\n  title: string;\r\n  description: string;\r\n  user: string;\r\n  done: boolean;\r\n  createdAt: number;\r\n  updatedAt: number;\r\n};\r\n\r\nexport type TodosState = {\r\n  error: string | null;\r\n  todos: Todo[];\r\n};\r\n\r\nexport const state: TodosState = {\r\n  todos: [],\r\n  error: null,\r\n};\r\n","import { IConfig } from \"overmind\";\r\nimport { createHook } from \"overmind-react\";\r\nimport { namespaced } from \"overmind/config\";\r\nimport { auth } from \"./auth/index\";\r\nimport { darkMode } from \"./darkMode/index\";\r\nimport { todos } from \"./todos\";\r\n\r\nexport const config = namespaced({\r\n  darkMode,\r\n  auth,\r\n  todos,\r\n});\r\n\r\ndeclare module \"overmind\" {\r\n  interface Config extends IConfig<typeof config> {\r\n    state: typeof config.state;\r\n    actions: typeof config.actions;\r\n    effects: typeof config.effects;\r\n  }\r\n}\r\n\r\nexport const useOvermind = createHook<typeof config>();\r\n","import React, { Fragment } from \"react\";\r\nimport { useOvermind } from \"../Overmind/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  setIsOpen: Function;\r\n}\r\n\r\nconst Sidebar: React.FC<Props> = (props) => {\r\n  const { isOpen, setIsOpen } = props;\r\n  const {\r\n    state: {\r\n      darkMode: { isEnabled },\r\n      auth: { isAuthenticated },\r\n    },\r\n    actions: {\r\n      darkMode: { turnOff, turnOn },\r\n      auth: { logout },\r\n    },\r\n  } = useOvermind();\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`fixed flex flex-col items-center left-0 top-0 h-full w-48 bg-white dark:bg-dark-gray-800 dark:text-white shadow py-4 transform transition-transform ${\r\n          isOpen ? \"\" : \"-translate-x-48\"\r\n        } duration-300 ease-in-out z-10`}\r\n      >\r\n        <button\r\n          className=\"flex items-center justify-center py-4 w-full hover:bg-white-alpha-30 focus:outline-none transition-colors duration-300\r\n    ease-in-out px-2 border-b-2 border-gray-700 dark:border-gray-400\"\r\n          onClick={() => (isEnabled ? turnOff() : turnOn())}\r\n        >\r\n          <i className=\"material-icons\">\r\n            {isEnabled ? \"brightness_7\" : \"brightness_4\"}\r\n          </i>\r\n        </button>\r\n        {isAuthenticated ? (\r\n          <button\r\n            className=\"flex items-center justify-center py-4 w-full hover:bg-white-alpha-30 focus:outline-none transition-colors duration-300\r\n    ease-in-out px-2 border-b-2 border-gray-700 dark:border-gray-400\"\r\n            onClick={() => {\r\n              logout();\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        ) : (\r\n          <Fragment>\r\n            <button\r\n              className=\"flex items-center justify-center py-4 w-full dark:text-white hover:bg-white-alpha-30 focus:outline-none transition-colors duration-300\r\n    ease-in-out px-2 border-b-2 border-gray-700 dark:border-gray-400\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              Login\r\n            </button>\r\n            <button\r\n              className=\"flex items-center justify-center py-4 w-full dark:text-white hover:bg-white-alpha-30 focus:outline-none transition-colors duration-300\r\n    ease-in-out px-2 border-b-2 border-gray-700 dark:border-gray-400\"\r\n              onClick={() => {\r\n                history.push(\"/register\");\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              Register\r\n            </button>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n      <button\r\n        className={`fixed left-0 right-0 top-0 bottom-0 ${\r\n          isOpen ? \"bg-black-alpha-50  h-full w-full\" : \"\"\r\n        } transition-colors duration-300 ease-in-out`}\r\n        onClick={() => setIsOpen(false)}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useOvermind } from \"../Overmind/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const {\r\n    state: {\r\n      darkMode: { isEnabled },\r\n      auth: { isAuthenticated },\r\n    },\r\n    actions: {\r\n      darkMode: { turnOff, turnOn },\r\n      auth: { logout },\r\n    },\r\n  } = useOvermind();\r\n\r\n  const history = useHistory();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  let isDesktop: boolean = useMediaQuery({ query: \"(min-width: 1024px)\" });\r\n\r\n  const desktopNav = (\r\n    <Fragment>\r\n      {isAuthenticated ? (\r\n        <Fragment>\r\n          <button\r\n            className=\"h-full hover:bg-white-alpha-30 transition-colors duration-300 ease-in-out focus:outline-none px-2\"\r\n            onClick={() => logout()}\r\n          >\r\n            Logout\r\n          </button>\r\n          <button\r\n            className=\"flex items-center h-full hover:bg-white-alpha-30 focus:outline-none transition-colors duration-300\r\n    ease-in-out px-2\"\r\n            onClick={() => (isEnabled ? turnOff() : turnOn())}\r\n          >\r\n            <i className=\"material-icons\">\r\n              {isEnabled ? \"brightness_7\" : \"brightness_4\"}\r\n            </i>\r\n          </button>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <button\r\n            className=\"h-full hover:bg-white-alpha-30 transition-colors duration-300 ease-in-out focus:outline-none px-2\"\r\n            onClick={() => history.push(\"/\")}\r\n          >\r\n            Login\r\n          </button>\r\n          <button\r\n            className=\"h-full hover:bg-white-alpha-30 transition-colors duration-300 ease-in-out focus:outline-none px-2\"\r\n            onClick={() => history.push(\"/register\")}\r\n          >\r\n            Regsiter\r\n          </button>\r\n          <button\r\n            className=\"flex items-center h-full hover:bg-white-alpha-30 focus:outline-none transition-colors duration-300\r\n    ease-in-out px-2\"\r\n            onClick={() => (isEnabled ? turnOff() : turnOn())}\r\n          >\r\n            <i className=\"material-icons\">\r\n              {isEnabled ? \"brightness_7\" : \"brightness_4\"}\r\n            </i>\r\n          </button>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n\r\n  const mobile = (\r\n    <button\r\n      onClick={() => setIsOpen(!isOpen)}\r\n      className=\"h-full hover:bg-white-alpha-30 transition-colors duration-300\r\n    ease-in-out px-2 focus:outline-none\"\r\n    >\r\n      <i className=\"material-icons\">menu</i>\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full h-16 bg-light-blue-300\">\r\n      <Sidebar isOpen={isOpen} setIsOpen={setIsOpen} />\r\n      <div className=\"flex flex-row justify-between w-90p h-full mx-auto\">\r\n        <div className=\"flex items-center text-2xl font-hairline h-full\">\r\n          TodoList\r\n        </div>\r\n        <div className=\"flex flex-row items-center justify-center h-full\">\r\n          {isDesktop ? desktopNav : mobile}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useOvermind } from \"../Overmind\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login: React.FC = (props) => {\r\n  const [credencials, setCredencials] = useState<Credencials>({\r\n    email: null,\r\n    password: null,\r\n  });\r\n  const {\r\n    state: {\r\n      auth: { isAuthenticated },\r\n    },\r\n    actions: {\r\n      auth: { login, getMe },\r\n    },\r\n  } = useOvermind();\r\n\r\n  const history = useHistory();\r\n\r\n  interface Credencials {\r\n    email: string | null;\r\n    password: string | null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) history.push(\"/todos\");\r\n  }, [isAuthenticated, history]);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      history.push(\"/todos\");\r\n    } else {\r\n      getMe();\r\n    }\r\n\r\n    if (isAuthenticated) history.push(\"/todos\");\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-col w-90p mx-auto p-4 max-w-screen-sm mt-24 bg-gray-400 dark:bg-gray-800 rounded shadow text-black dark:text-white\">\r\n        <div className=\"text-center  text-4xl font-hairline mb-4\">Login</div>\r\n        <input\r\n          className=\"border-b-2 border-black dark:border-white bg-transparent \r\n      focus:border-light-blue-300 mb-4 p-2 transition-colors\r\n      duration-300 ease-in-out focus:outline-none placeholder-gray-700\r\n      dark-placeholder:placeholder-gray-300\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          onChange={(e) =>\r\n            setCredencials({ ...credencials, email: e.target.value })\r\n          }\r\n        />\r\n        <input\r\n          className=\"border-b-2 border-black dark:border-white bg-transparent\r\n      focus:border-light-blue-300 mb-4 p-2 transition-colors\r\n      duration-300 ease-in-out focus:outline-none placeholder-gray-700\r\n      dark-placeholder:placeholder-gray-300\"\r\n          type=\"text\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          onChange={(e) =>\r\n            setCredencials({ ...credencials, password: e.target.value })\r\n          }\r\n        />\r\n        <button\r\n          className=\"bg-light-blue-300 py-2 rounded shadow focus:outline-none\"\r\n          onClick={() => login(credencials)}\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useOvermind } from \"../Overmind\";\r\n\r\nconst NewTodo: React.FC = () => {\r\n  const {\r\n    actions: {\r\n      todos: { newTodo },\r\n    },\r\n  } = useOvermind();\r\n\r\n  interface NewTodo {\r\n    title: string | null;\r\n    description: string | null;\r\n  }\r\n\r\n  const newTodoData: NewTodo = {\r\n    title: null,\r\n    description: null,\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-90p mx-auto p-4 max-w-screen-sm mt-24 bg-gray-400 dark:bg-gray-800 rounded shadow text-black dark:text-white\">\r\n      <div className=\"text-center  text-4xl font-hairline mb-4\">New Todo</div>\r\n      <input\r\n        className=\"border-b-2 border-black dark:border-white bg-transparent \r\n      focus:border-light-blue-300 mb-4 p-2 transition-colors\r\n      duration-300 ease-in-out focus:outline-none placeholder-gray-700\r\n      dark-placeholder:placeholder-gray-300\"\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        name=\"title\"\r\n        onChange={(e) => (newTodoData.title = e.target.value as string)}\r\n      />\r\n      <input\r\n        className=\"border-b-2 border-black dark:border-white bg-transparent\r\n      focus:border-light-blue-300 mb-4 p-2 transition-colors\r\n      duration-300 ease-in-out focus:outline-none placeholder-gray-700\r\n      dark-placeholder:placeholder-gray-300\"\r\n        type=\"text\"\r\n        placeholder=\"Description\"\r\n        name=\"description\"\r\n        onChange={(e) => (newTodoData.description = e.target.value as string)}\r\n      />\r\n      <button\r\n        className=\"bg-light-blue-300 py-2 rounded shadow focus:outline-none\"\r\n        onClick={() => newTodo(newTodoData)}\r\n      >\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTodo;\r\n","import React from \"react\";\r\nimport { useOvermind } from \"../Overmind\";\r\nimport { UpdateTodoArg } from \"../Overmind/todos/actions\";\r\nimport { Todo } from \"../Overmind/todos/state\";\r\n\r\ninterface TodoProps {\r\n  todo: Todo;\r\n  key: number;\r\n}\r\n\r\nconst TodoComp: React.FC<TodoProps> = (props) => {\r\n  const { todo } = props;\r\n\r\n  const {\r\n    actions: {\r\n      todos: { updateTodo, deleteTodo },\r\n    },\r\n  } = useOvermind();\r\n\r\n  const date = new Date(todo.createdAt * 1000);\r\n  const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\r\n    month: \"short\",\r\n    day: \"2-digit\",\r\n  });\r\n  const [{ value: month }, , { value: day }] = dateTimeFormat.formatToParts(\r\n    date\r\n  );\r\n\r\n  // changeIsDone.body.isdone CANNOT be camelcase because ShouldBindJSON in this route does not respect case\r\n  let changeIsDone: UpdateTodoArg = {\r\n    id: todo._id,\r\n    body: {\r\n      done: !todo.done,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-row items-center h-full w-full border border-black dark:border-white p-2 m-1\">\r\n      <input\r\n        className=\"mx-4\"\r\n        type=\"checkbox\"\r\n        checked={todo.done}\r\n        onChange={() => updateTodo(changeIsDone)}\r\n      />\r\n      <div className=\"h-full w-full\">\r\n        <div>{todo.title}</div>\r\n        <small>\r\n          {todo.description} {` - ${month}/${day}`}\r\n        </small>\r\n      </div>\r\n      <button\r\n        className=\"flex h-full mx-2 focus:outline-none\"\r\n        onClick={() => deleteTodo(todo._id)}\r\n      >\r\n        <i className=\"material-icons text-red-800\">clear</i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoComp;\r\n","import React, { useEffect } from \"react\";\r\nimport { useOvermind } from \"../Overmind\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Todo } from \"../Overmind/todos/state\";\r\n\r\nimport NewTodo from \"../Components/NewTodo\";\r\nimport TodoComp from \"../Components/Todo\";\r\n\r\nconst Todos: React.FC = () => {\r\n  const {\r\n    state: {\r\n      auth: { isAuthenticated },\r\n      todos: { todos },\r\n    },\r\n    actions: {\r\n      todos: { getTodos },\r\n    },\r\n  } = useOvermind();\r\n\r\n  const history = useHistory();\r\n\r\n  let allTodos = todos.map((todo, index) => (\r\n    <TodoComp todo={todo as Todo} key={index} />\r\n  ));\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) history.push(\"/\");\r\n\r\n    getTodos();\r\n\r\n    //eslint-disable-next-line\r\n  }, [isAuthenticated]);\r\n\r\n  return (\r\n    <section>\r\n      <NewTodo />\r\n      <div className=\"flex flex-col w-90p mx-auto p-4 max-w-screen-sm mt-24 bg-gray-400 dark:bg-gray-800 rounded shadow text-black dark:text-white\">\r\n        {allTodos}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useOvermind } from \"../Overmind\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CreateUser: React.FC = () => {\r\n  const [newUser, setNewUser] = useState<NewUser>({\r\n    name: null,\r\n    email: null,\r\n    password: null,\r\n  });\r\n\r\n  const {\r\n    state: {\r\n      auth: { isAuthenticated },\r\n    },\r\n    actions: {\r\n      auth: { createUser },\r\n    },\r\n  } = useOvermind();\r\n\r\n  const history = useHistory();\r\n\r\n  interface NewUser {\r\n    name: string | null;\r\n    email: string | null;\r\n    password: string | null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) history.push(\"/todos\");\r\n  }, [isAuthenticated, history]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-90p mx-auto p-4 max-w-screen-sm mt-24 bg-gray-400 dark:bg-gray-800 rounded shadow text-black dark:text-white\">\r\n      <div className=\"text-center  text-4xl font-hairline mb-4\">\r\n        New Account\r\n      </div>\r\n      <input\r\n        className=\"border-b-2 border-black dark:border-white bg-transparent \r\n      focus:border-light-blue-300 mb-4 p-2 transition-colors\r\n      duration-300 ease-in-out focus:outline-none placeholder-gray-700\r\n      dark-placeholder:placeholder-gray-300\"\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        name=\"name\"\r\n        onChange={(e) => setNewUser({ ...newUser, name: e.target.value })}\r\n      />\r\n      <input\r\n        className=\"border-b-2 border-black dark:border-white bg-transparent \r\n      focus:border-light-blue-300 mb-4 p-2 transition-colors\r\n      duration-300 ease-in-out focus:outline-none placeholder-gray-700\r\n      dark-placeholder:placeholder-gray-300\"\r\n        type=\"text\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n      />\r\n      <input\r\n        className=\"border-b-2 border-black dark:border-white bg-transparent\r\n      focus:border-light-blue-300 mb-4 p-2 transition-colors\r\n      duration-300 ease-in-out focus:outline-none placeholder-gray-700\r\n      dark-placeholder:placeholder-gray-300\"\r\n        type=\"text\"\r\n        placeholder=\"Password\"\r\n        name=\"password\"\r\n        onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\r\n      />\r\n      <button\r\n        className=\"bg-light-blue-300 py-2 rounded shadow focus:outline-none\"\r\n        onClick={() => {\r\n          createUser(newUser);\r\n        }}\r\n      >\r\n        Register\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React from \"react\";\r\nimport { useOvermind } from \"../Overmind\";\r\n\r\nconst Error: React.FC = () => {\r\n  const {\r\n    state: {\r\n      auth: { error },\r\n    },\r\n  } = useOvermind();\r\n  return (\r\n    <div\r\n      className={`fixed bottom-0 w-full h-16 bg-red-500 text-white transition-transform transform ${\r\n        error !== null ? \" \" : \"translate-y-16\"\r\n      } duration-200 ease-in-out`}\r\n    >\r\n      <div className=\"flex flex-row items-center justify-center text-3xl text-center max-w-full h-full\">\r\n        {error as string}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"overmind-react\";\nimport { createOvermind } from \"overmind\";\nimport { config } from \"./Overmind\";\nimport \"./css/tailwind.css\";\n\nimport Navbar from \"./Layout/Navbar\";\nimport Login from \"./Pages/Login\";\nimport Todos from \"./Pages/Todos\";\nimport CreateUser from \"./Pages/CreateUser\";\nimport Error from \"./Layout/Error\";\n\nconst App: React.FC = () => {\n  const overmind = createOvermind(config, {\n    devtools: \"http://localhost:5000\",\n  });\n\n  return (\n    <Provider value={overmind}>\n      <Router basename={\"/react\"}>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/todos\" component={Todos} />\n          <Route exact path=\"/register\" component={CreateUser} />\n        </Switch>\n        <Error />\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}